#
# TIM BUCHALKA'S COMPLETE PYTHON MASTERCLASS Created by Tim Buchalka, Jean-Paul Roberts, Tim Buchalka's Learn Programming Academy.
# This is a collection of my codes, generated by myself for learning Python T
# his challenge is about understanding shelves in Python.
# Here is a link to the course: https://www.udemy.com/python-the-complete-python-developer-course/
# START OF CHALLENGE (TIM BUCHALKA)
#
# cave_game.py will then use the two shelves instead of dictionaries.
# Apart from opening and closing the shelves, cave_game will need only
# two changes to the actual code - remember that shelf keys MUST be strings!
#
# START OF MY OWN CODE

import shelve

loc = 1

while True:
    loc = str(loc)  # CHANGE 1: CONVERTING LOC AS INTEGER TO STRING
    locations = shelve.open("locations")  # CHANGE 1
    vocabulary = shelve.open("vocabulary")  # CHANGE 2
    availableExits = ", ".join(locations[loc]["exits"].keys())

    print(locations[loc]["desc"])

    # In the official solution it was changed to string: '0' (here and in initialization file as well)
    if int(loc) == 0:
        break
    else:
        allExits = locations[loc]["exits"].copy()
        allExits.update(locations[loc]["namedExits"])

    direction = input("Available exits are " + availableExits).upper()
    print()

    # Parse the user input, using our vocabulary dictionary if necessary
    if len(direction) > 1:  # more than 1 letter, so check vocab
        words = direction.split()
        for word in words:
            if word in vocabulary["vocabulary"]:   # does it contain a word we know? # CHANGE 2
                direction = vocabulary["vocabulary"][word]  # CHANGE 3
                break

    # if len(direction) > 1:  # more than 1 letter, so check vocab
    #     words = direction.split()
    #     for word in words:
    #         if word in vocabulary:   # does it contain a word we know?
    #             direction = vocabulary[word]
    #             break

    if direction in allExits:
        loc = allExits[direction]
    else:
        print("You cannot go in that direction")
    vocabulary.close()  # CHANGE 4
    locations.close()








